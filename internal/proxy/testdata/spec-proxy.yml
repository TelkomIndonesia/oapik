openapi: "3.0.0"
info:
  title: "Proxy API"
  version: "1.0.0"
  license:
    name: "Internal"
    url: "http://localhost"
servers:
  - url: "http://localhost"
security:
  - {}
paths:
  "/tenants/{tenant-id}/profiles/{profile-id}":
    get:
      # populate the rest of parameters from an operation defined inside `spec`
      x-proxy:
        name: profile
  "/profiles/{profile-id}":
    get:
      operationId: GetProfile
      parameters:
        - name: "validate"
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ZeroableBoolean"
      # populate the rest of parameters from an operation defined inside `spec`
      x-proxy:
        name: profile
        path: /tenants/{tenant-id}/profiles/{profile-id}
        method: get
        inject:
          parameters:
            - name: tenant-id
              in: path
      x-data:
        proxy-name: profile
    put:
      operationId: PutProfile
      x-proxy:
        name: profile
        path: /tenants/{tenant-id}/profiles/{profile-id}
        method: put
        inject:
          parameters:
            - name: tenant-id
              in: path
  "/validated-profiles/{profile-id}":
    get:
      operationId: GetValidatedProfile
      # populate the rest of parameters from an operation defined inside `spec`
      x-proxy:
        name: profile
        path: /tenants/{tenant-id}/profiles/{profile-id}
        method: get
        inject:
          parameters:
            - name: tenant-id
              in: path
components:
  schemas:
    ZeroableBoolean:
      type: boolean
  x-proxy:
    profile:
      spec: ./spec-profile.yml
