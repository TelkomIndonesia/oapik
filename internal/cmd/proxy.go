package cmd

import (
	"log"
	"os"

	"github.com/telkomindonesia/oapik/internal/proxy"
)

type Proxy struct {
	Input  string `arg:"input"`
	Output string `arg:"output" optional:"" `
}

func (p Proxy) Run(ctx Context) error {
	bytes, _, err := proxy.Compile(ctx, p.Input)
	if err != nil {
		log.Fatalln("fail to compiles file:", err)
	}

	bytes = append([]byte("# Code generated by openapi-utils. DO NOT EDIT.\n"), bytes...)
	switch p.Output {
	case "":
		if _, err := os.Stdout.Write(bytes); err != nil {
			log.Fatalln("fail to write stdout: ", err)
		}
	default:
		if err := os.WriteFile(p.Output, bytes, 0644); err != nil {
			log.Fatalln("fail to write file: ", err)
		}
	}
	return nil
}
