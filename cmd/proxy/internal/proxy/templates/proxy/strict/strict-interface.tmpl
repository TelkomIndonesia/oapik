type strictRequest interface{
    ToRequest(base *http.Request) (*http.Request,error) 
}

{{range .}}
    {{$opid := .OperationId -}}
    type {{$opid | ucFirst}}RequestObject struct {
        {{range .PathParams -}}
            {{.GoName | ucFirst}} {{.TypeDef}} {{.JsonTag}}
        {{end -}}
        {{if .RequiresParamObject -}}
            Params {{$opid}}Params
        {{end -}}
    }

    func ( r {{$opid | ucFirst}}RequestObject) ToRequest(base *http.Request) (*http.Request,error) {
        return base,nil
    }

{{end}}

// StrictServerInterface represents all server handlers.
type StrictServerInterface interface {
{{range .}}{{.SummaryAsComment }}
// ({{.Method}} {{.Path}})
{{$opid := .OperationId -}}
{{$opid}}(ctx context.Context, request {{$opid | ucFirst}}RequestObject) ({{ (or (upstreamOperationID $opid)  $opid) | ucFirst}}RequestObject, error)
{{end}}{{/* range . */ -}}
}

type StrictUpstreamInterface interface {
{{range upstreams}}
    {{.}}() http.HandlerFunc 
{{end}}
} 
